# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
# 1. Build avec Maven et exécution des tests
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'  # Fichier POM Maven
    mavenOptions: '-Xmx3072m'  # Option de mémoire pour Maven
    javaHomeOption: 'JDKVersion'  # Spécifier la version du JDK
    jdkVersionOption: '21.0'  # Version de Java (JDK 21)
    jdkArchitectureOption: 'x64'  # Architecture 64 bits
    goals: 'clean package'  # Nettoyer le projet et construire

# 2. Publier les résultats de tests JUnit
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'  # Format de résultats JUnit
    testResultsFiles: '**/target/surefire-reports/TEST-*.xml'  # Chemin vers les fichiers de résultats
    failTaskOnFailedTests: true  # Marquer comme échoué si des tests échouent

